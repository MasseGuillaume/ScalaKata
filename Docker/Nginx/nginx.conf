# round robin those
upstream backend {
  server 127.0.0.1:7331;
  server 127.0.0.1:7332;
  server 127.0.0.1:7333;
}

# permanent redirect http to https
# server {
#  listen 80;
#  server_name scalakata;
#  rewrite ^ https://scalakata$request_uri? permanent;
#}

# permanent redirect http://wwww.example.com and https://wwww.example.com to https://example.com
server {
  server_name www.scalakata;
  rewrite ^ https://scalakata$request_uri? permanent;
}

server {
  server_name www.codebrew.io;
  rewrite ^ https://codebrew.io$request_uri? permanent;
}

# compression
gzip  on;
gzip_http_version 1.1;
gzip_vary on;
gzip_comp_level 6;
gzip_proxied any;
gzip_types text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js;
gzip_buffers 16 8k;
gzip_disable "MSIE [1-6]\.(?!.*SV1)";

server {
  listen 80;
  server_name scalakata.com codebrew.io;

  root scalakata;

  # ssl on;
  # ssl_certificate {{ certificate_dest }}/{{ certificate }};
  # ssl_certificate_key {{ certificate_key_dest }}/{{ certificate_key }};
  # ssl_ciphers RC4:HIGH:!aNULL:!MD5;
  # ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
  # ssl_prefer_server_ciphers on;
  # ssl_session_cache shared:SSL:10m;
  # ssl_session_timeout 10m;

  # index
  location = / {
    index index.html;
  }


  # static assets
  location ~ ^/assets {
    expires max;
    try_files $uri $uri/;
  }

  # proxy to backend
  location ~ / {
    proxy_pass              http://backend;
    proxy_redirect          off;
    proxy_next_upstream     error timeout invalid_header http_500;
    proxy_connect_timeout   2;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # errors
  # error_page 502 /errors/502.html;
  # location = /errors/* {
  #   root {{ nginx_error_pages }};
  # }
}
